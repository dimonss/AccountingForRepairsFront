import { useState } from 'react'
import BarcodeScannerComponent from 'react-qr-barcode-scanner'
import Modal from './Modal'

interface BarcodeScannerProps {
  isOpen: boolean
  onClose: () => void
  onScan: (result: string) => void
}

const BarcodeScanner = ({ isOpen, onClose, onScan }: BarcodeScannerProps) => {
  const [isScanning, setIsScanning] = useState(true)
  const [error, setError] = useState<string>('')
  const [scanStatus, setScanStatus] = useState<'searching' | 'found' | 'error'>('searching')

  const handleScan = (result: string) => {
    if (result) {
      setScanStatus('found')
      setIsScanning(false)
      onScan(result)
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–µ–ª —É—Å–ø–µ—Ö
      setTimeout(() => {
        onClose()
      }, 500)
    }
  }

  const handleError = (error: unknown) => {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º NotFoundException - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∫–æ–≥–¥–∞ –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–∞–¥—Ä–µ
    if (error && typeof error === 'object' && 'name' in error) {
      const errorName = (error as { name: string }).name;
      if (errorName === 'NotFoundException' || errorName === 'NotFoundException2') {
        // –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è - –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–º –∫–∞–¥—Ä–µ
        return;
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –æ—à–∏–±–∫–∏
    if (typeof error === 'string' && error.includes('NotFoundException')) {
      return;
    }
    
    console.error('Barcode scanner error:', error);
    setError('–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.');
  }

  const handleClose = () => {
    setIsScanning(false)
    setError('')
    onClose()
  }

  const handleRetry = () => {
    setError('')
    setIsScanning(true)
  }

  return (
    <Modal
      isOpen={isOpen}
      onClose={handleClose}
      title="–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –®—Ç—Ä–∏—Ö–∫–æ–¥–∞"
    >
      <div className="barcode-scanner-content">
        {error ? (
          <div className="scanner-error">
            <div className="error-icon">üì∑</div>
            <p className="error-message">{error}</p>
            <div className="error-actions">
              <button 
                className="retry-btn"
                onClick={handleRetry}
              >
                –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
              </button>
              <button 
                className="cancel-btn"
                onClick={handleClose}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        ) : (
          <div className="scanner-container">
            <div className="scanner-instructions">
              <p>üì± –ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ —à—Ç—Ä–∏—Ö–∫–æ–¥ –∏–ª–∏ QR-–∫–æ–¥</p>
              <p>üéØ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–¥ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤ –∫–∞–¥—Ä–µ</p>
              <div className="scan-status">
                {scanStatus === 'searching' && (
                  <span className="status-searching">üîç –ü–æ–∏—Å–∫ –∫–æ–¥–∞...</span>
                )}
                {scanStatus === 'found' && (
                  <span className="status-found">‚úÖ –ö–æ–¥ –Ω–∞–π–¥–µ–Ω!</span>
                )}
              </div>
            </div>
            
            <div className="scanner-viewport">
              {isScanning && (
                <BarcodeScannerComponent
                  width="100%"
                  height="300px"
                  //todo fix any
                  onUpdate={(err: unknown, result: any) => {
                    if (result && result.getText) {
                      handleScan(result.getText())
                    } else if (err) {
                      // –¢–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä—É–µ–º, –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                      // NotFoundException - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–æ–¥–∞
                      if (err && typeof err === 'object' && 'name' in err) {
                        const errorName = (err as { name: string }).name;
                        if (errorName !== 'NotFoundException' && errorName !== 'NotFoundException2') {
                          handleError(err);
                        }
                      } else if (typeof err === 'string' && !err.includes('NotFoundException')) {
                        handleError(err);
                      }
                    }
                  }}
                  onError={handleError}
                />
              )}
              
              {/* Overlay —Å —Ä–∞–º–∫–æ–π –¥–ª—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è */}
              <div className="scanner-overlay">
                <div className="scanner-frame"></div>
              </div>
            </div>

            <div className="scanner-actions">
              <button 
                className="cancel-scan-btn"
                onClick={handleClose}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        )}
      </div>
    </Modal>
  )
}

export default BarcodeScanner 